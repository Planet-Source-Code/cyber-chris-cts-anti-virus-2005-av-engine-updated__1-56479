Attribute VB_Name = "moddeletion"

Option Explicit ':( Line inserted by Formatter
Declare Function FlushFileBuffers Lib "kernel32" (ByVal hfile As Long) As Long ':( Missing Scope
Dim SBox(255) As Long ':( Missing Scope
Dim KeyArr(255) As Long ':( Missing Scope
Dim I1 As Long, J1 As Long ':( Missing Scope

Function RandBinary(Length As Long) As String ':( Missing Scope

  Dim i As Long
  Dim ByteArray() As Byte
  Dim RandChar As String
  Dim RC4Rand As Double

    ReDim Preserve ByteArray(Length) As Byte

    For i = 0 To Length
        RC4Rand = RC4Rnd() * 255
        ByteArray(i) = CByte(RC4Rand)
    Next ':( Repeat For-Variable: I

    RandBinary = StrConv(ByteArray, vbUnicode)

End Function

Function RandFileName() As String ':( Missing Scope

  Dim RFN As String
  Dim RndNum As Double
  Dim Chars As String
    Dim i As Integer
    Chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890-_ "

    For i = 0 To 100
        RndNum = RC4Rnd() * Len(Chars)
        RFN = RFN & Mid$(Chars, 1 + CInt(RndNum), 1)
    Next ':( Repeat For-Variable: I

    RandFileName = RFN & ".tmp"

End Function

Public Function RC4Rnd() As Double

  Dim a As Long
  Dim k As Long
  Dim tmpVar As Long

    I1 = (I1 + 1) Mod 256
    J1 = (J1 + SBox(I1)) Mod 256
    tmpVar = SBox(I1)
    SBox(I1) = SBox(J1)
    SBox(J1) = tmpVar

    k = SBox((SBox(I1) + SBox(J1)) Mod 256)

    RC4Rnd = CDbl(k) / CDbl(255)

End Function

Public Sub RC4Seed(Key As String)

  Dim lngSwapVar As Long
  Dim i As Long
  Dim j As Long

    For i = 0 To 255
        KeyArr(i) = Asc(Mid$(Key, (i Mod Len(Key)) + 1, 1))
        SBox(i) = i
    Next ':( Repeat For-Variable: I

    j = 0
    For i = 0 To 255
        j = (j + SBox(i) + KeyArr(i)) Mod 256
        lngSwapVar = SBox(i)
        SBox(i) = SBox(j)
        SBox(j) = lngSwapVar
    Next ':( Repeat For-Variable: I

End Sub

Public Function ReadBinary(FileName As String)

  Dim BinContent As String
  Dim FileNo As Integer, FileSize As Long

    FileNo = FreeFile
    FileSize = FileLen(FileName)
    BinContent = String$(FileSize, " ")

    Open FileName For Binary As FileNo
    Get FileNo, , BinContent
    Close FileNo

    ReadBinary = BinContent

End Function

Public Function ShredFile(FileName As String, Strength As Integer)

    'On Error Resume Next

      Dim FileContentLen As Long ':( Move line to top of current Function
        FileContentLen = FileLen(FileName)

      Dim FName As String ':( Move line to top of current Function
      Dim TmpF As String ':( Move line to top of current Function
        FName = FileName

      Dim FileNo As Integer ':( Move line to top of current Function
      Dim i As Long, j As Long ':( Move line to top of current Function
      Dim BinString0 As String ':( Move line to top of current Function
      Dim BinString255 As String ':( Move line to top of current Function
        BinString0 = String$(FileContentLen, Chr$(0))
        BinString255 = String$(FileContentLen, Chr$(255))

        'DoD like file overwriting
        'Destroy the file with bits
        For i = 1 To Strength
            WriteBinary FName, BinString0
            WriteBinary FName, BinString255
        Next ':( Repeat For-Variable: I

        'Seed RC4 PRNG
      Dim Seed As String ':( Move line to top of current Function
        Seed = CStr(Date) & CStr(Timer) & CStr(Time) & Chr$(CLng(Rnd * 255))
        RC4Seed Seed

        'Overwrite with a mass of random bytes
        'To make sure it's really gone
        For i = 1 To Strength
            'Random bytes generated by strong RC4 PRNG
            WriteBinary FName, RandBinary(FileContentLen)

            'Update progress
        Next ':( Repeat For-Variable: I

        'Rename file at random
        'Remove ALL traces of file, even name!
        For i = 1 To Strength
            TmpF = RandFileName()
            Name FName As TmpF
            FName = TmpF
        Next ':( Repeat For-Variable: I

        'Kill file
        'If you ever recover, you'll get a mass of random bytes
        'Goodbye!
        Kill FName

End Function ':( On Error Resume still active

Public Function WriteBinary(FileName As String, BinContent As String)

  Dim FileNo As Integer, FileSize As Long

    FileNo = FreeFile

    Open FileName For Binary As FileNo
    FlushFileBuffers (FileNo)
    Put FileNo, , BinContent
    FlushFileBuffers (FileNo)
    Close FileNo

End Function

':) Ulli's VB Code Formatter V2.16.6 (2004-Sep-01 10:34) 4 + 164 = 168 Lines
